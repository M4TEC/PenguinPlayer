# This is a basic workflow to help you get started with Actions

name: Compile the player

# Controls when the action will run. 
on:
  # Triggers the workflow on "push" or pull request events but only for the master branch
  "push":
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    if: ${{ github.event == 'push' }}

    steps:
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYY-MM-DD HH:mm:ss"
      
      - id: tagtime
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYYMMDDHHmmss"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagtime.outputs.time }}
          release_name: Release ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false

      - name: Output Release Data
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > rel_url
          echo "${{ steps.tagtime.outputs.time }}" > rel_tag

      - name: Upload Release Data
        uses: actions/upload-artifact@v2.2.2
        with:
          name: release
          path: rel_*

  # This workflow contains a single job called "build"
  build:
    name: Build the player

    needs: release
    if: ${{ success() }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - file: "player.js"
          - environment: "--env ie"
            file: "player.ie.js"
            publish: "yes" # Only publish the version that has most functions

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install Dependencies
        run: npm i

      - name: Build
        run: |
          npm run build -- ${{ matrix.environment }}
          mkdir public
          cp demo/* public
          mkdir public/dist
          cp -R dist public

      - name: Download Release URL
        if: ${{ github.event == 'push' }}
        uses: actions/download-artifact@v1
        with:
          name: release
      
      - name: Read Release URL
        if: ${{ github.event == 'push' }}
        run: |
          URL=$(cat release/rel_url)
          echo "RELEASE_URL=$URL" >> $GITHUB_ENV
          
      - name: Upload Release Asset
        if: ${{ github.event == 'push' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_URL }}
          asset_path: ./dist/player.js
          asset_name: ${{ matrix.file }}
          asset_content_type: text/javascript
      
      - name: Publish to GitHub Pages
        if: ${{ github.event == 'push' && matrix.publish == 'yes' }}
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: public

  error:
    runs-on: ubuntu-latest

    name: Delete Release

    needs: [release, build]
    if: ${{ failure() && github.event == 'push' }}

    steps:
      - name: Download Release Data
        uses: actions/download-artifact@v1
        with:
          name: release

      - name: Read Release Tag
        run: |
          URL=$(cat release/rel_tag)
          echo "RELEASE_TAG=$URL" >> $GITHUB_ENV

      - name: Delete release just created
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}