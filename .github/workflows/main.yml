# This is a basic workflow to help you get started with Actions

name: Compile the player

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install Dependencies
        run: npm i

      - name: Build the player
        run: |
          npm run build
          mkdir public
          cp demo/* public
          mkdir public/dist
          cp -R dist public
      
      - id: time
        if: ${{ github.event == push }}
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYY-MM-DD HH:mm:ss"
      
      - id: tagtime
        if: ${{ github.event == push }}
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYYMMDDHHmmss"
      
      - name: Create Release
        id: create_release
        if: ${{ github.event == push }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagtime.outputs.time }}
          release_name: Release ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset
        if: ${{ github.event == push }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/player.js
          asset_name: player.js
          asset_content_type: text/javascript
      
      - name: Publish to GitHub Pages
        if: ${{ github.event == push }}
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: public
