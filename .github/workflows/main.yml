name: Compile the player

on:
  "push":
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    continue-on-error: true

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2

      - name: Read package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package.json
          prop_path: version
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          release_name: Release v${{ steps.version.outputs.prop }}
          draft: false
          prerelease: false

      - name: Output Release Data
        if: ${{ success() }}
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > rel_url
          echo "${{ steps.version.outputs.prop }}" > rel_tag

      - name: Upload Release Data
        if: ${{ success() }}
        uses: actions/upload-artifact@v2.2.2
        with:
          name: release
          path: rel_*

  build:
    name: Build the player

    needs: release

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - flags: ""
          - flags: "ie"
            publish: "yes" # Only publish the version that has most functions

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Dependencies
        run: npm i

      - name: Build
        run: |
          npm run build -- --env flags=${{ matrix.flags }}

      - name: Prepare for publish
        if: ${{ github.event_name == 'push' && matrix.publish == 'yes' && success() }}
        run: |
          mkdir public
          cp demo/* public
          mkdir public/dist
          cp -R dist public

      - name: Download Release URL
        if: ${{ github.event_name == 'push' }}
        uses: actions/download-artifact@v1
        with:
          name: release
      
      - name: Read Release URL
        if: ${{ github.event_name == 'push' && success() }}
        run: |
          URL=$(cat release/rel_url)
          echo "RELEASE_URL=$URL" >> $GITHUB_ENV
      
      - id: filename
        if: ${{ github.event_name == 'push' && success() }}
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ matrix.flags == '' }}
          if_true: player.js
          if_false: player.${{ matrix.flags }}.js
          
      - name: Upload Release Asset
        if: ${{ github.event_name == 'push' && success() }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_URL }}
          asset_path: ./dist/player.js
          asset_name: ${{ steps.filename.outputs.value }}
          asset_content_type: text/javascript
      
      - name: Publish to GitHub Pages
        if: ${{ github.event_name == 'push' && matrix.publish == 'yes' && success() }}
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: public

  error:
    runs-on: ubuntu-latest

    name: Delete Release

    needs: [release, build]
    if: ${{ failure() && github.event_name == 'push' }}

    steps:
      - name: Download Release Data
        uses: actions/download-artifact@v1
        with:
          name: release

      - name: Read Release Tag
        run: |
          URL=$(cat release/rel_tag)
          echo "RELEASE_TAG=$URL" >> $GITHUB_ENV

      - name: Delete release just created
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}